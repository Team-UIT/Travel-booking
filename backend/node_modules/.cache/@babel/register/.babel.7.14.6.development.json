{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\84349\\\\Desktop\\\\travel\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\84349\\\\Desktop\\\\travel\\\\backend\",\"filename\":\"C:\\\\Users\\\\84349\\\\Desktop\\\\travel\\\\backend\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\84349\\\\Desktop\\\\travel\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\84349\\Desktop\\travel\\backend\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\84349\\Desktop\\travel\\backend",
      "filename": "C:\\Users\\84349\\Desktop\\travel\\backend\\app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\84349\\Desktop\\travel\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\84349\\Desktop\\travel\\backend\\app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\84349\\Desktop\\travel\\backend\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\84349\\Desktop\\travel\\backend\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport mongoose from 'mongoose';\nimport path from 'path';\nimport bodyParser from 'body-parser';\nimport Homeroutes from './routes/HomeRoutes.js';\nconst app = express();\napp.set('view engine', 'ejs');\nconst port = process.env.PORT || 5000;\nmongoose.connect('mongodb://localhost/booking', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true\n}); // var db = mongoose.connection;\n// db.on('error', console.error.bind(console, 'MongoDB connection error:'));\n\nconst __dirname = path.resolve();\n\napp.use(express.static(path.join(__dirname + '/public')));\napp.use(express.json({\n  limit: '30mb'\n}));\napp.use(express.urlencoded({\n  extended: true,\n  limit: '30mb'\n}));\napp.use(bodyParser.json()); // const Homeroutes = require('./routes/HomeRoutes.js');\n\napp.use('/', Homeroutes);\napp.listen(port, () => {\n  console.log(`Serve at http://localhost:${port}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwibW9uZ29vc2UiLCJwYXRoIiwiYm9keVBhcnNlciIsIkhvbWVyb3V0ZXMiLCJhcHAiLCJzZXQiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwidXNlQ3JlYXRlSW5kZXgiLCJfX2Rpcm5hbWUiLCJyZXNvbHZlIiwidXNlIiwic3RhdGljIiwiam9pbiIsImpzb24iLCJsaW1pdCIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7QUFDQSxPQUFPQyxRQUFQLE1BQXFCLFVBQXJCO0FBQ0EsT0FBT0MsSUFBUCxNQUFpQixNQUFqQjtBQUNBLE9BQU9DLFVBQVAsTUFBdUIsYUFBdkI7QUFDQSxPQUFPQyxVQUFQLE1BQXVCLHdCQUF2QjtBQUdBLE1BQU1DLEdBQUcsR0FBR0wsT0FBTyxFQUFuQjtBQUNBSyxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCLEtBQXZCO0FBQ0EsTUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUNBVCxRQUFRLENBQUNVLE9BQVQsQ0FBaUIsNkJBQWpCLEVBQWdEO0FBQzlDQyxFQUFBQSxlQUFlLEVBQUUsSUFENkI7QUFFOUNDLEVBQUFBLGtCQUFrQixFQUFFLElBRjBCO0FBRzlDQyxFQUFBQSxjQUFjLEVBQUU7QUFIOEIsQ0FBaEQsRSxDQUtBO0FBQ0E7O0FBRUEsTUFBTUMsU0FBUyxHQUFHYixJQUFJLENBQUNjLE9BQUwsRUFBbEI7O0FBQ0FYLEdBQUcsQ0FBQ1ksR0FBSixDQUFRakIsT0FBTyxDQUFDa0IsTUFBUixDQUFlaEIsSUFBSSxDQUFDaUIsSUFBTCxDQUFVSixTQUFTLEdBQUcsU0FBdEIsQ0FBZixDQUFSO0FBQ0FWLEdBQUcsQ0FBQ1ksR0FBSixDQUFRakIsT0FBTyxDQUFDb0IsSUFBUixDQUFhO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQWIsQ0FBUjtBQUNBaEIsR0FBRyxDQUFDWSxHQUFKLENBQVFqQixPQUFPLENBQUNzQixVQUFSLENBQW1CO0FBQUVDLEVBQUFBLFFBQVEsRUFBRSxJQUFaO0FBQWtCRixFQUFBQSxLQUFLLEVBQUU7QUFBekIsQ0FBbkIsQ0FBUjtBQUNBaEIsR0FBRyxDQUFDWSxHQUFKLENBQVFkLFVBQVUsQ0FBQ2lCLElBQVgsRUFBUixFLENBRUE7O0FBQ0FmLEdBQUcsQ0FBQ1ksR0FBSixDQUFRLEdBQVIsRUFBWWIsVUFBWjtBQUdBQyxHQUFHLENBQUNtQixNQUFKLENBQVdqQixJQUFYLEVBQWlCLE1BQU07QUFDckJrQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSw2QkFBNEJuQixJQUFLLEVBQTlDO0FBQ0QsQ0FGRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXDg0MzQ5XFxEZXNrdG9wXFx0cmF2ZWxcXGJhY2tlbmRcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xyXG5pbXBvcnQgSG9tZXJvdXRlcyBmcm9tICcuL3JvdXRlcy9Ib21lUm91dGVzLmpzJ1xyXG5cclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnZWpzJyk7XHJcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDUwMDA7XHJcbm1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGI6Ly9sb2NhbGhvc3QvYm9va2luZycsIHtcclxuICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxyXG4gIHVzZUNyZWF0ZUluZGV4OiB0cnVlLFxyXG59KTtcclxuLy8gdmFyIGRiID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcclxuLy8gZGIub24oJ2Vycm9yJywgY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUsICdNb25nb0RCIGNvbm5lY3Rpb24gZXJyb3I6JykpO1xyXG5cclxuY29uc3QgX19kaXJuYW1lID0gcGF0aC5yZXNvbHZlKCk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSArICcvcHVibGljJykpKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oeyBsaW1pdDogJzMwbWInIH0pKTtcclxuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSwgbGltaXQ6ICczMG1iJyB9KSk7XHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5cclxuLy8gY29uc3QgSG9tZXJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL0hvbWVSb3V0ZXMuanMnKTtcclxuYXBwLnVzZSgnLycsSG9tZXJvdXRlcyk7XHJcblxyXG5cclxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coYFNlcnZlIGF0IGh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fWApO1xyXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "mongoose",
        "path",
        "bodyParser",
        "Homeroutes",
        "app",
        "set",
        "port",
        "process",
        "env",
        "PORT",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "useCreateIndex",
        "__dirname",
        "resolve",
        "use",
        "static",
        "join",
        "json",
        "limit",
        "urlencoded",
        "extended",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAGA,MAAMC,GAAG,GAAGL,OAAO,EAAnB;AACAK,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACAT,QAAQ,CAACU,OAAT,CAAiB,6BAAjB,EAAgD;AAC9CC,EAAAA,eAAe,EAAE,IAD6B;AAE9CC,EAAAA,kBAAkB,EAAE,IAF0B;AAG9CC,EAAAA,cAAc,EAAE;AAH8B,CAAhD,E,CAKA;AACA;;AAEA,MAAMC,SAAS,GAAGb,IAAI,CAACc,OAAL,EAAlB;;AACAX,GAAG,CAACY,GAAJ,CAAQjB,OAAO,CAACkB,MAAR,CAAehB,IAAI,CAACiB,IAAL,CAAUJ,SAAS,GAAG,SAAtB,CAAf,CAAR;AACAV,GAAG,CAACY,GAAJ,CAAQjB,OAAO,CAACoB,IAAR,CAAa;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAb,CAAR;AACAhB,GAAG,CAACY,GAAJ,CAAQjB,OAAO,CAACsB,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE,IAAZ;AAAkBF,EAAAA,KAAK,EAAE;AAAzB,CAAnB,CAAR;AACAhB,GAAG,CAACY,GAAJ,CAAQd,UAAU,CAACiB,IAAX,EAAR,E,CAEA;;AACAf,GAAG,CAACY,GAAJ,CAAQ,GAAR,EAAYb,UAAZ;AAGAC,GAAG,CAACmB,MAAJ,CAAWjB,IAAX,EAAiB,MAAM;AACrBkB,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BnB,IAAK,EAA9C;AACD,CAFD",
      "sourceRoot": "C:\\Users\\84349\\Desktop\\travel\\backend\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport mongoose from 'mongoose';\r\nimport path from 'path';\r\nimport bodyParser from 'body-parser';\r\nimport Homeroutes from './routes/HomeRoutes.js'\r\n\r\n\r\nconst app = express();\r\napp.set('view engine', 'ejs');\r\nconst port = process.env.PORT || 5000;\r\nmongoose.connect('mongodb://localhost/booking', {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n  useCreateIndex: true,\r\n});\r\n// var db = mongoose.connection;\r\n// db.on('error', console.error.bind(console, 'MongoDB connection error:'));\r\n\r\nconst __dirname = path.resolve();\r\napp.use(express.static(path.join(__dirname + '/public')));\r\napp.use(express.json({ limit: '30mb' }));\r\napp.use(express.urlencoded({ extended: true, limit: '30mb' }));\r\napp.use(bodyParser.json());\r\n\r\n// const Homeroutes = require('./routes/HomeRoutes.js');\r\napp.use('/',Homeroutes);\r\n\r\n\r\napp.listen(port, () => {\r\n  console.log(`Serve at http://localhost:${port}`);\r\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1624347019791
  }
}